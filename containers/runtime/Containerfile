# this is a modified version of https://github.com/devfile/developer-images/universal/ubi9/Dockerfile
FROM quay.io/devfile/base-developer-image:ubi9-latest

ARG TARGETARCH

LABEL name="rhadp/runtime"

# labels for container catalog
LABEL summary="RHADP universal runtime image"
LABEL description="Automotive developer runtime image with minimal tools."
LABEL io.k8s.display-name="rhadp/runtime"

USER 0

# $PROFILE_EXT contains all additions made to the bash environment
ENV PROFILE_EXT=/etc/profile.d/udi_environment.sh
RUN touch ${PROFILE_EXT} && chown 10001 ${PROFILE_EXT}

USER 10001

# install everything to /home/tooling/ as /home/user/ may get overriden, see github.com/eclipse/che/issues/22412
ENV HOME=/home/tooling

# kube
ENV KUBECONFIG=/home/user/.kube/config

USER 0

# misc required packages and stuff
RUN dnf install --setopt=tsflags=nodocs -y bzip2 git lsof patch redhat-rpm-config unzip wget which zip zlib

# Python
RUN dnf install --setopt=tsflags=nodocs -y python3.12 python3.12-devel python3.12-setuptools python3.12-pip nss_wrapper \
    && cd /usr/bin \
    && if [ ! -L python ]; then ln -s python3.12 python; fi \
    && if [ ! -L pydoc ]; then ln -s pydoc3.12 pydoc; fi \
    && if [ ! -L python-config ]; then ln -s python3.12-config python-config; fi \
    && if [ ! -L pip ]; then ln -s pip-3.12 pip; fi

RUN pip install pylint yq

# config directories
RUN mkdir -p /home/tooling/.config/pip && \
    mkdir -p /home/tooling/.config/containers && \
    mkdir -p /home/tooling/.cargo && \
    mkdir -p /home/tooling/.composer && \
    mkdir -p /home/tooling/.cache && \
    mkdir -p /home/tooling/.scripts/startup && \
    mkdir -p /home/tooling/.ssh && \
    mkdir -p /home/tooling/.config/jumpstarter/clients && \
    mkdir -p /etc/jumpstarter/exporters && \
    chgrp -R 0 /home/tooling && chmod -R g=u /home/tooling

# oc client
ENV OC_VERSION=4.19
RUN if [ "$TARGETARCH" = "arm64" ]; then \
        curl -L https://mirror.openshift.com/pub/openshift-v4/arm64/clients/ocp/stable-${OC_VERSION}/openshift-client-linux.tar.gz; \
    else \
        curl -L https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable-${OC_VERSION}/openshift-client-linux.tar.gz; \
    fi | tar -C /usr/local/bin -xz --no-same-owner && \
    chmod +x /usr/local/bin/oc

# kubectl
ENV K8S_VERSION=1.32
RUN <<EOF
set -euf -o pipefail

cat <<EOF2 > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v${K8S_VERSION}/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v${K8S_VERSION}/rpm/repodata/repomd.xml.key
EOF2

dnf install --setopt=tsflags=nodocs -y kubectl
curl -sSL -o ~/.kubectl_aliases https://raw.githubusercontent.com/ahmetb/kubectl-alias/master/.kubectl_aliases
echo '[ -f ~/.kubectl_aliases ] && source ~/.kubectl_aliases' >> ${PROFILE_EXT}
EOF

# add init-workspace script
ENV SCRIPTS_DIR=/home/tooling/.scripts \
    INIT_SCRIPTS_DIR=/home/tooling/.scripts/startup

COPY init-workspace ${SCRIPTS_DIR}/init-workspace
RUN chmod +x ${SCRIPTS_DIR}/init-workspace

# create symbolic links from /home/tooling/ -> /home/user/
RUN stow . -t /home/user/ -d /home/tooling/ --no-folding

# set permissions on /etc/passwd, /etc/group, /etc/pki and /home to allow arbitrary users to write
RUN chgrp -R 0 /home && chmod -R g=u /etc/passwd /etc/group /home /etc/pki

# set permissions on the user's home directory
RUN chgrp -R 0 /home/user && chmod -R g=u /home/user

# cleanup dnf cache
RUN dnf -y clean all --enablerepo='*'

# install jumpstarter and other python dependencies

COPY --from=ghcr.io/astral-sh/uv:latest /uv  /bin/uv
COPY --from=ghcr.io/astral-sh/uv:latest /uvx /bin/uvx

# set the virtual environment for jumpstarter etc
ENV UV_PYTHON=python3.12 VIRTUAL_ENV=/venv

# install jumpstarter and other python dependencies
COPY requirements.txt /tmp/requirements.txt
RUN uv venv /venv && \
    uv pip install "git+https://github.com/jumpstarter-dev/jumpstarter#subdirectory=packages/jumpstarter-all" && \
    uv pip install -r /tmp/requirements.txt && \
    rm -rf /tmp/requirements.txt

ENV PATH="/venv/bin:$PATH"

# add more directories ...
RUN mkdir -p /home/user/.config/jumpstarter/clients/ && \
    mkdir -p ${INIT_SCRIPTS_DIR}

# set permissions on the user's home directory
RUN chgrp -R 0 /home/user && chmod -R g=u /home/user

USER 10001

# This will make sure that we always run python from our venv instead
RUN echo "alias python='uv run python'" >> /home/user/.bashrc

ENV HOME=/home/user