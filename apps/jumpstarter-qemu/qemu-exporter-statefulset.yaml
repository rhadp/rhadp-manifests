apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qemu-exporter
spec:
  serviceName: qemu-exporter
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      exporter-mock: qemu
  template:
    metadata:
      labels:
        exporter-mock: qemu
      annotations:
        openshift.io/required-scc: privileged
    spec:
      #tolerations:
      #- key: "metal"
      #  operator: "Equal"
      #  value: "true"
      #  effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: rhadp.node-role/metal
                operator: In
                values:
                - "true"
      serviceAccountName: qemu-exporter
      restartPolicy: Always
      volumes:
        - name: shared
          emptyDir: {}
        - name: dev-kvm
          hostPath:
            path: /dev/kvm
            type: CharDevice
        - name: dev-vhost-vsock
          hostPath:
            path: /dev/vhost-vsock
            type: CharDevice
      initContainers:
        - name: jumpstarter-init
          image: quay.io/mickume/runtime:latest
          volumeMounts:
            - mountPath: /shared
              name: shared
          command:
            - /bin/bash
            - -c
            - |
              set -exo pipefail

              # Extract the values from the mounted service account
              TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
              API_SERVER=$(oc whoami --show-server)

              # set ./kube/config correctly
              mkdir -p ~/.kube

              #oc config set-cluster rhadp \
              #  --server=$API_SERVER \
              #  --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

              #oc config set-credentials qemu-sa \
              #  --token=$TOKEN

              #oc config set-context qemu-ctx \
              #  --cluster=rhadp \
              #  --user=qemu-sa \
              #  --namespace=$NAMESPACE

              #oc config use-context qemu-ctx

              # check if exporter already exists and delete it if it does
              EXPORTER_NAME=$(cat /etc/hostname)
              #if oc get exporter "$EXPORTER_NAME" -n $NAMESPACE &>/dev/null; then
              #  echo "Exporter $EXPORTER_NAME already exists, deleting it first..."
              #  oc delete exporter "$EXPORTER_NAME" -n $NAMESPACE || true
              #  # wait a moment for the deletion to complete
              #  sleep 2s
              #fi
              
              # create the exporter config
              jmp admin create exporter "$EXPORTER_NAME" -n $NAMESPACE --label platform=qemu-arm --label type=virtual --save --insecure-tls-config --nointeractive --out ./dummy.yaml
              TOKEN=$(yq '.token' dummy.yaml)
              echo "$TOKEN" > /shared/token

              # remove the exporter config
              rm ./dummy.yaml

              # detect the endpoint
              while [ -z "$ENDPOINT" ]
              do
                ENDPOINT=$(kubectl get -n $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace) \
                  exporters.jumpstarter.dev $(cat /etc/hostname) -o jsonpath="{.status.endpoint}")
                sleep 1s
              done
              echo "$ENDPOINT" > /shared/endpoint

      containers:
        - name: jumpstarter-exporter
          image: quay.io/mickume/runtime:latest
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 2.0
              memory: "2G"
            requests:
              cpu: 1.0
              memory: "1G"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /shared
              name: shared
            - mountPath: /dev/kvm
              name: dev-kvm
            - mountPath: /dev/vhost-vsock
              name: dev-vhost-vsock
          env:
            - name: JUMPSTARTER_GRPC_INSECURE
              value: "1"
          command:
            - /bin/bash
            - -c
            - |
              set -euxo pipefail

              cat <<EOF > qemu.yaml
              apiVersion: jumpstarter.dev/v1alpha1
              kind: ExporterConfig
              metadata:
                namespace: $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
                name: $(cat /etc/hostname)
              endpoint: $(cat /shared/endpoint)
              tls:
                ca: ''
                insecure: true
              token: $(cat /shared/token)
              export:
                console:
                  ref: qemu.console
                flasher:
                  ref: qemu.flasher
                power:
                  ref: qemu.power
                qemu:
                  type: jumpstarter_driver_qemu.driver.Qemu
                  config:
                    smp: 1
                    mem: "1G"
                    default_partitions:
                      OVMF_CODE.fd: /usr/share/AAVMF/AAVMF_CODE.fd
                      OVMF_VARS.fd: /usr/share/AAVMF/AAVMF_VARS.fd
                    hostfwd:
                      ssh:
                        hostport: 9022
                        guestport: 22
              EOF
              
              #sleep 60s

              #jmp run --exporter-config qemu.yaml

              while true; do
                sleep 30s
                #jmp run --exporter-config qemu.yaml
              done
