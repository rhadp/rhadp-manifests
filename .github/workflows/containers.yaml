name: build other container images
on:
  workflow_dispatch:
  
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

env:
  REGISTRY: quay.io
  REGISTRY_ORG: quay.io/rhadp

jobs:
  build-containers:
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            name: codespaces

    runs-on: ${{ matrix.runs-on }}
    
    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write
      
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: get version
        run: |
          # check if there are any tags, if not use a default version
          if git describe --tags --exact-match HEAD 2>/dev/null; then
            VERSION=$(git describe --tags --exact-match HEAD)
          elif git describe --tags 2>/dev/null; then
            VERSION=$(git describe --tags)
          else
            VERSION="$(git rev-parse --short HEAD)"
          fi
          VERSION=${VERSION#v} # remove the leading v prefix for version
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}"

      - name: set image tags
        id: set-tags
        run: |
          TAGS="${{ env.REGISTRY_ORG }}/${{ matrix.name }}:${{ env.VERSION }}"

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAGS="$TAGS,${{ env.REGISTRY_ORG }}/${{ matrix.name }}:latest"
          fi

          if [[ "${{ github.ref }}" == refs/heads/release-* ]]; then
            RELEASE_BRANCH_NAME=$(basename "${{ github.ref }}")
            TAGS="$TAGS,${{ env.REGISTRY_ORG }}/${{ matrix.name }}:${RELEASE_BRANCH_NAME}"
          fi

          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: enable docker multi-arch support
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: login to quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      
      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup buildx
        uses: docker/setup-buildx-action@v3
      
      - id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_ORG }}/${{ matrix.name }}
      
      - name: build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: "containers/${{ matrix.name }}"
          file: "containers/${{ matrix.name }}/Containerfile"
          tags: ${{ steps.set-tags.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true

      - name: generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_ORG }}/${{ matrix.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true